{"version":3,"sources":["Components/listaSiirto/ListaSiirto.js","Kehitys5/Vastaus.js","Kehitys5/Kysymys.js","Kehitys5/Aihe.js","Kehitys5/Tentti.js","Kehitys9/Vastaus.js","Kehitys9/Kysymys.js","Kehitys9/Tentti.js","Kehitys9/Login.js","Kehitys9/Register.js","Kehitys9/services/dataService.js","Kehitys9/TenttiSovellus.js","Tehtavat/Tehtava43.js","App.js","reportWebVitals.js","index.js"],"names":["ListaSiirto","useState","listOne","setListOne","listTwo","setListTwo","lista","numero","nimi","selected","setSelected","paivFiltteri","setPaivFiltteri","jotain","setJotain","Klikattu","nro","index","a","Siirra","s","tempList1","filter","tempList2","push","Lista","list","f","uusiLista","i","toLowerCase","includes","map","className","onClick","shortid","generate","length","useEffect","nuoliv","nuolio","type","style","textAlign","size","value","readOnly","jarjestettyLista1","jarjestettyLista2","sort","jarjestaListat","placeholder","maxLength","onChange","e","target","Nuolet","Vastaus","vastaus","dispatch","kysymysIndex","vastausIndex","adminMode","console","log","classN","data","checked","vastattu","event","teksti","Kysymys","kysymys","tapaus","vastaukset","tentti_","aihe","kysymykset","ratkaisut","ratkaisuIndex","Tentti","valinta","dataNoudettu","setDataNoudettu","tentti","setTentti","localStorage","setItem","JSON","stringify","result","getItem","parse","o","tenttiKopio","splice","Error","fontWeight","item","setValinta","setAdminMode","Aihe","vasTek","setVasTek","onBlur","tenttiID","tenttiValinta","kysTap","setKysTap","dataService","setValittuID","setValittuIndex","tenttiIndex","tentit","valittu","setValittu","removeExam","then","response","catch","error","changeExam","id","Login","login","newEmail","setNewEmail","newPassword","setNewPassword","onSubmit","email","password","name","Register","register","required","minLength","baseUrl","newUser","axios","post","request","addUser","getUser1","token","get","headers","Authorization","getExams","delete","addExam","exam","put","TenttiSovellus","setTentit","valittuIndex","valittuID","setNumero","nayta1","setNayta1","nayta2","setNayta2","uudetKys","uudet","userNow","setUserNow","authToken","setAuthToken","userId","setUserId","errorMessage","setErrorMessage","timer","setTimeout","clearTimeout","Object","keys","loggedUserJSON","window","user","accessToken","userHook","lisaaAihe","undefined","removeItem","location","href","backgroundColor","userOrNot","em","passwd","preventDefault","testUser","userData","tekstiOrNot","Tehtava43","asetaHelp","document","getElementById","help","forEach","onfocus","innerHTML","App","sovellus","setSovellus","label","funktio","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8cefcc32.chunk.js","sourcesContent":["// import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport shortid from 'shortid';\n\nfunction ListaSiirto() {\n\n  const [listOne, setListOne] = useState([\"Matti\", \"Pekka\", \"Heikki\", \"Marja\", \"Atte\", \"Rauno\", \"Sofia\"]);\n  const [listTwo, setListTwo] = useState([\"Harri\", \"Veikko\", \"Jorma\", \"Sirpa\", \"Aleksi\", \"Sanna\", \"Sini\"]);\n  const [selected, setSelected] = useState({ lista: \"\", numero: 0, nimi: \"Valitse nimi\" });\n  const [paivFiltteri, setPaivFiltteri] = useState(\"\");\n  // Tällä muuttujalla saadaan sivusto renderöitymään aina set:n jälkeen/tarvittaessa\n  const [jotain, setJotain] = useState(false);\n\n  const nuoliv = \"\\u27F5\"\n  const nuolio = \"\\u27F6\"\n\n  // Kun klikataan nimeä, luodaan klikattu nimi selected(lista:(1 vasen, 2 oikea), numero, nimi)\n  const Klikattu = (nro, index, a) => {\n      setSelected({ lista: nro, numero: index, nimi: a });\n    return;\n  }\n\n  // Siirretään nuolesta nimi listasta toiseen tai jos lista ei vaihdu, tulkitaan se nimen poistoksi\n  const Siirra = (s, selected) => {\n    if (s === \"o\" && selected.lista === \"1\") {\n      let tempList1 = listOne.filter(nimi => nimi !== selected.nimi);\n      let tempList2 = listTwo;\n      tempList2.push(selected.nimi)\n      setListOne(tempList1)\n      setListTwo(tempList2)\n      setJotain(!jotain)\n      return;\n    }\n    if (s === \"v\" && selected.lista === \"2\") {\n      let tempList2 = listTwo.filter(nimi => nimi !== selected.nimi);\n      let tempList1 = listOne;\n      tempList1.push(selected.nimi)\n      setListOne(tempList1)\n      setListTwo(tempList2)\n      setJotain(!jotain)\n      return;\n    }\n    if (s === \"v\" && selected.lista === \"1\") {\n      let tempList1 = listOne.filter(nimi => nimi !== selected.nimi);\n      setListOne(tempList1)\n      setJotain(!jotain)\n      return;\n    }\n    if (s === \"o\" && selected.lista === \"2\") {\n      let tempList2 = listTwo.filter(nimi => nimi !== selected.nimi);\n      setListTwo(tempList2)\n      setJotain(!jotain)\n      return;\n    }\n    return;\n  }\n\n  // Luodaan listat. Jos hakuehtoja on, ne filtteröidään esiin.\n  const Lista = (nro, list, f) => {\n    if (f !== \"\") {\n      let uusiLista = list.filter(i => i.toLowerCase().includes(f.toLowerCase())).map((a, index) => <div className=\"text\" key={shortid.generate()} onClick={() => Klikattu(nro, index, a)}>{a}</div>)\n      if (uusiLista.length === 0) { uusiLista = \"lista on tyhjä\" }\n      return uusiLista;\n    } else {\n      let uusiLista = list.map((a, index) => <div className=\"text\" key={shortid.generate()} onClick={() => Klikattu(nro, index, a)}>{a}</div>)\n      if (uusiLista.length === 0) { uusiLista = \"lista on tyhjä\" }\n      return uusiLista;\n    }\n  }\n\n  // Aakkostetaan listat\n  const jarjestaListat = () => {\n    let jarjestettyLista1 = listOne;\n    let jarjestettyLista2 = listTwo;\n    jarjestettyLista1.sort();\n    jarjestettyLista2.sort();\n    setListOne(jarjestettyLista1);\n    setListTwo(jarjestettyLista2);\n    setJotain(!jotain)\n  }\n  // Keskiboksin Nuolet ja muut toiminnot\n  const Nuolet = (nuoliv, nuolio) => {\n    let uusiKeskus = <>\n      <div><input type=\"text\" style={{ textAlign: 'center' }} size=\"10\" value={selected.nimi} readOnly></input></div>\n      <div className=\"arrows\" onClick={() => Siirra(\"v\", selected)}>{nuoliv}</div>\n      <div className=\"arrows\" onClick={() => Siirra(\"o\", selected)}>{nuolio}</div>\n      <div><button onClick={() => jarjestaListat()}>Aakkosta listat</button></div>\n      <div><input placeholder=\"Etsi nimeä...\" type=\"text\" maxLength=\"10\" size=\"10\" onChange={(e) => { setPaivFiltteri(e.target.value) }} value={paivFiltteri}>\n      </input></div>\n    </>\n    return uusiKeskus;\n  }\n\n  // päivitetään listat ja palautetaan select alkuarvoon\n  useEffect(() => {\n    setSelected({ lista: \"\", numero: 0, nimi: \"Valitse nimi\" })\n  }, [jotain]);\n\n  // renderöidään sivu\n  return (\n    <>\n      <div className=\"game-board\">\n        <div className=\"box\">{Lista(\"1\", listOne, paivFiltteri)}</div>\n        <div className=\"box\">{Nuolet(nuoliv, nuolio)} </div>\n        <div className=\"box\">{Lista(\"2\", listTwo, paivFiltteri)}</div>\n      </div>\n    </>\n  )\n}\n\nexport default ListaSiirto;\n","function Vastaus({ vastaus, dispatch, kysymysIndex, vastausIndex, adminMode }) {\r\n    console.log(\"Vastaus renderöitiin\")\r\n    let classN = adminMode?\"\":\"ui-input-text\";\r\n    return (\r\n        <div>\r\n            <input type=\"checkbox\" onChange={\r\n                () => dispatch({ type: \"VASTAUKSEN_TILA_MUUTTUI\", data: { kysymysIndex: kysymysIndex, vastausIndex: vastausIndex } })}\r\n                checked={vastaus.vastattu}></input>\r\n            <input type=\"text\" className={classN} readOnly={!adminMode} size=\"70\" onChange={\r\n                (event) => dispatch({ type: \"VASTAUKSEN_TEKSTI_MUUTTUI\", data: { kysymysIndex: kysymysIndex, vastausIndex: vastausIndex, teksti: event.target.value } })}\r\n                value={vastaus.teksti}></input>\r\n             {adminMode && <span><button onClick={() => dispatch({ type: \"POISTA_VASTAUS\", data: { kysymysIndex: kysymysIndex, vastausIndex: vastausIndex } })}>Poista vastaus</button>\r\n             </span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Vastaus;","import Vastaus from './Vastaus';\r\n\r\nfunction Kysymys({ kysymys, kysymysIndex, dispatch, adminMode }) {\r\n    console.log(\"Kysymys renderöitiin\")\r\n    let classN = adminMode?\"\":\"ui-input-text\";\r\n    return (<div>\r\n        <input type=\"text\" className={classN} size=\"70\" onChange={\r\n            (event) => dispatch({ type: \"KYSYMYKSEN_TAPAUS_MUUTTUI\", data: { kysymysIndex: kysymysIndex, tapaus: event.target.value } })}\r\n            value={kysymys.tapaus} readOnly={!adminMode}></input>\r\n        {kysymys.vastaukset.map(\r\n            (vastaus, index) =>\r\n                <div key={index}>\r\n                    <Vastaus vastaus={vastaus} dispatch={dispatch} kysymysIndex={kysymysIndex} vastausIndex={index} adminMode={adminMode} />\r\n                </div>\r\n        )}\r\n        {adminMode && <span><button onClick={() => dispatch({ type: \"POISTA_KYSYMYS\", data: { kysymysIndex: kysymysIndex } })}>Poista kysymys</button>\r\n            <button onClick={() => dispatch({ type: \"LISÄÄ_VASTAUS\", data: { kysymysIndex: kysymysIndex } })}>Lisää vastaus</button>\r\n        </span>}\r\n    </div>);\r\n}\r\nexport default Kysymys;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Kysymys from './Kysymys';\r\n\r\nlet vastaus1 = { teksti: \"Mikhail Gorbatsov\", vastattu: false }\r\nlet vastaus2 = { teksti: \"Gheorghe Hagi\", vastattu: false }\r\nlet vastaus3 = { teksti: \"Enver Hoxha\", vastattu: false }\r\nlet vastaus4 = { teksti: \"Nicolae Ceausescu\", vastattu: false }\r\n\r\nlet ratkaisu1 = { ratkaisuIndex: 3 } //oikea ratkaisu MIINUS yksi\r\n\r\nlet kysymys1 = {\r\n    tapaus: \"Ketä kutsuttiin sekä Karpaattien neroksi että Ajatusten Tonavaksi?\",\r\n    vastaukset: [vastaus1, vastaus2, vastaus3, vastaus4],\r\n    ratkaisut: [ratkaisu1]\r\n}\r\n\r\nlet vastaus5 = { teksti: \"Akaa\", vastattu: false }\r\nlet vastaus6 = { teksti: \"Sakkola\", vastattu: false }\r\nlet vastaus7 = { teksti: \"Etelä-Pirkkala\", vastattu: false }\r\nlet vastaus8 = { teksti: \"Lakalaiva\", vastattu: false }\r\n\r\nlet ratkaisu2 = { ratkaisuIndex: 2 } //oikea ratkaisu MIINUS yksi\r\n\r\nlet kysymys2 = {\r\n    tapaus: \"Mikä oli nykyisen Pirkkalan kunnan nimi vuosina 1922-1938\",\r\n    vastaukset: [vastaus5, vastaus6, vastaus7, vastaus8],\r\n    ratkaisut: [ratkaisu2]\r\n}\r\n\r\nlet vastaus9 = { teksti: \"Antwerpenissä\", vastattu: false }\r\nlet vastaus10 = { teksti: \"Melbournessa\", vastattu: false }\r\nlet vastaus11 = { teksti: \"Pariisissa\", vastattu: false }\r\nlet vastaus12 = { teksti: \"Tokiossa\", vastattu: false }\r\n\r\nlet ratkaisu3 = { ratkaisuIndex: 0 } //oikea ratkaisu MIINUS yksi\r\n\r\nlet kysymys3 = {\r\n    tapaus: \"Missä pidettiin vuoden 1920 kesäolympialaiset\",\r\n    vastaukset: [vastaus9, vastaus10, vastaus11, vastaus12],\r\n    ratkaisut: [ratkaisu3]\r\n}\r\n\r\nvar tentti_ = [{ aihe: \"Historia\", kysymykset: [kysymys1] }, { aihe: \"Maantieto\", kysymykset: [kysymys2] }, { aihe: \"Urheilu\", kysymykset: [kysymys3] }]\r\n\r\n\r\nconst Tentti = ({ valinta, adminMode }) => {\r\n    const [dataNoudettu, setDataNoudettu] = useState(false)\r\n    const [tentti, setTentti] = useState()\r\n    console.log(\"Tentti renderöitiin\")\r\n\r\n    useEffect(() => {\r\n\r\n        if (!dataNoudettu) {\r\n            let result = localStorage.getItem(\"tenttiData\")\r\n            if (result == null) {\r\n                setTentti(tentti_)\r\n            } else {\r\n                console.log(JSON.parse(result))\r\n                setTentti(JSON.parse(result))\r\n            }\r\n            setDataNoudettu(true)\r\n        } else {\r\n            localStorage.setItem(\"tenttiData\", JSON.stringify(tentti))\r\n        }\r\n\r\n    }, [tentti, dataNoudettu])\r\n\r\n    const dispatch = (o) => {\r\n        let tenttiKopio = (JSON.parse(JSON.stringify(tentti)))\r\n        switch (o.type) {\r\n            case \"POISTA_VASTAUS\":\r\n                tenttiKopio[valinta].kysymykset[o.data.kysymysIndex].vastaukset.splice(o.data.vastausIndex, 1)\r\n                break;\r\n            case \"LISÄÄ_VASTAUS\":\r\n                tenttiKopio[valinta].kysymykset[o.data.kysymysIndex].vastaukset.push({ teksti: \"Uusi vastaus, vielä tyhjä\", vastattu: false })\r\n                break;\r\n            case \"LISÄÄ_KYSYMYS\":\r\n                tenttiKopio[valinta].kysymykset.push({ tapaus: \"Uusi kysymys, vielä tyhjä\", vastaukset: [] })\r\n                break;\r\n            case \"POISTA_KYSYMYS\":\r\n                tenttiKopio[valinta].kysymykset.splice(o.data.kysymysIndex, 1)\r\n                break;\r\n            case \"KYSYMYKSEN_TAPAUS_MUUTTUI\":\r\n                tenttiKopio[valinta].kysymykset[o.data.kysymysIndex].tapaus = o.data.tapaus\r\n                break;\r\n            case \"VASTAUKSEN_TEKSTI_MUUTTUI\":\r\n                tenttiKopio[valinta].kysymykset[o.data.kysymysIndex].vastaukset[o.data.vastausIndex].teksti = o.data.teksti\r\n                break;\r\n            case \"VASTAUKSEN_TILA_MUUTTUI\":\r\n                tenttiKopio[valinta].kysymykset[o.data.kysymysIndex].vastaukset[o.data.vastausIndex].vastattu = !tenttiKopio[valinta].kysymykset[o.data.kysymysIndex].vastaukset[o.data.vastausIndex].vastattu\r\n                break;\r\n            default: throw new Error(\"Nyt on jokin vialla vastauksessa\")\r\n        }\r\n        setTentti(tenttiKopio)\r\n    }\r\n\r\n    return (\r\n        <div>{(dataNoudettu === true) &&\r\n            <div>\r\n                <div style={{ fontWeight: \"bold\" }}>{tentti[valinta].aihe}</div>\r\n                {tentti[valinta].kysymykset.map((item, index) => <div key={index} style={{ fontWeight: \"bold\" }}><br /><Kysymys  kysymys={item} kysymysIndex={index} dispatch={dispatch} adminMode={adminMode} /></div>)}\r\n                {adminMode && <span><button onClick={() => dispatch({ type: \"LISÄÄ_KYSYMYS\" })}>Lisää luokka</button>\r\n                </span>}\r\n            </div>}\r\n        </div>);\r\n}\r\nexport default Tentti;","import React, {useState} from 'react';\r\nimport Aihe from './Aihe';\r\n\r\nfunction Tentti() {\r\n\r\n  const [valinta, setValinta] = useState(0)\r\n  const [adminMode, setAdminMode] = useState(false)\r\n\r\n  return (\r\n    <div>\r\n              <button onClick={() => setValinta(0)} value=\"Historia\">Historia</button>\r\n              <button onClick={() => setValinta(1)} value=\"Maantieto\">Maantieto</button>\r\n              <button onClick={() => setValinta(2)} value=\"Urheilu\">Urheilu</button>\r\n              &nbsp;&nbsp;\r\n              <button onClick={() => setAdminMode(!adminMode)} value=\"Editointi\">Editointi <span style={{ fontWeight: \"bold\" }}>{adminMode?\" ON\":\" OFF\"}</span></button>\r\n              <Aihe valinta={valinta} adminMode={adminMode}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tentti;","import React, { useEffect, useState } from 'react';\r\n\r\nfunction Vastaus({ vastaus, dispatch, kysymysIndex, vastausIndex, adminMode }) {\r\n    // console.log(\"Vastaus renderöitiin\")\r\n    let classN = adminMode?\"\":\"ui-input-text\";\r\n    const [vasTek,setVasTek] = useState(vastaus.teksti)\r\n\r\n    useEffect(() => {\r\n        setVasTek(vastaus.teksti)\r\n    }, [vastaus.teksti])\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"checkbox\" onChange={\r\n                () => dispatch({ type: \"VASTAUKSEN_TILA_MUUTTUI\", data: { kysymysIndex: kysymysIndex, vastausIndex: vastausIndex } })}\r\n                checked={vastaus.vastattu}></input>\r\n            <input type=\"text\" className={classN} readOnly={!adminMode} size=\"70\" \r\n            onChange={e => {setVasTek(e.target.value);}}\r\n            onBlur={\r\n                (event) => dispatch({ type: \"VASTAUKSEN_TEKSTI_MUUTTUI\", data: { kysymysIndex: kysymysIndex, vastausIndex: vastausIndex, teksti: event.target.value } })}\r\n                value={vasTek}\r\n                ></input>\r\n             {adminMode && <span><button onClick={() => dispatch({ type: \"POISTA_VASTAUS\", data: { kysymysIndex: kysymysIndex, vastausIndex: vastausIndex } })}>Poista vastaus</button>\r\n             </span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Vastaus;","import React, { useEffect, useState } from 'react';\r\nimport Vastaus from './Vastaus';\r\n\r\nfunction Kysymys({ tenttiID, tenttiValinta, setTentti, kysymys, kysymysIndex, dispatch, adminMode }) {\r\n    // console.log(\"Kysymys renderöitiin\")\r\n    let classN = adminMode?\"\":\"ui-input-text\";\r\n    const [kysTap,setKysTap] = useState(kysymys.tapaus)\r\n\r\n    useEffect(() => {\r\n        setKysTap(kysymys.tapaus)\r\n    }, [kysymys.tapaus])\r\n\r\n    return (<div>\r\n        <input type=\"text\" className={classN} size=\"70\" \r\n        onChange={e => {setKysTap(e.target.value);\r\n    }}\r\n        onBlur={\r\n            (event) => dispatch({ type: \"KYSYMYKSEN_TAPAUS_MUUTTUI\", data: { tenttiID: tenttiID, kysymysIndex: kysymysIndex, tapaus: event.target.value } })}\r\n            value={kysTap} readOnly={!adminMode}>\r\n\r\n            </input>\r\n        {kysymys.vastaukset.map(\r\n            (vastaus, index) =>\r\n                <div key={index}>\r\n                    <Vastaus \r\n                    vastaus={vastaus} \r\n                    dispatch={dispatch} \r\n                    kysymysIndex={kysymysIndex} \r\n                    vastausIndex={index} \r\n                    adminMode={adminMode} \r\n                    />\r\n                </div>\r\n        )}\r\n        {adminMode && <span><button onClick={() => dispatch({ type: \"POISTA_KYSYMYS\", data: { kysymysIndex: kysymysIndex } })}>Poista kysymys</button>\r\n            <button onClick={() => dispatch({ type: \"LISÄÄ_VASTAUS\", data: { kysymysIndex: kysymysIndex } })}>Lisää vastaus</button>\r\n        </span>}\r\n    </div>);\r\n}\r\nexport default Kysymys;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Kysymys from './Kysymys';\r\n\r\nconst Tentti = ({ dataService, tenttiValinta, setDataNoudettu, setValittuID, setValittuIndex, tenttiIndex, tenttiID, tentit, adminMode }) => {\r\n    const [tentti, setTentti] = useState(tenttiValinta)\r\n    const [valittu, setValittu] = useState(tenttiIndex)\r\n    let classN = adminMode?\"\":\"ui-input-text\";\r\n\r\n    // console.log(\"Tentti renderöitiin\")\r\n\r\n    useEffect(() => {\r\n        setTentti(tenttiValinta)\r\n    }, [tenttiValinta])\r\n\r\n    useEffect(() => {\r\n        setValittu(tenttiIndex)\r\n    }, [tenttiIndex])\r\n\r\n    const dispatch = (o) => {\r\n        let tenttiKopio = (JSON.parse(JSON.stringify(tentit)))\r\n        switch (o.type) {\r\n            case \"POISTA_TENTTI\":\r\n                dataService //> json-server --watch db.json --port 3001\r\n                    .removeExam(o.data.tenttiID)\r\n                    .then(response => {\r\n                        console.log(\"tentti poistettiin\", response);\r\n                        setDataNoudettu(false)\r\n                        setValittuID()\r\n                        setValittuIndex()\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                    .then(function () {\r\n                    });\r\n                break;\r\n            case \"MUUTA_TENTIN_NIMI\":\r\n                tenttiKopio[valittu].aihe = o.data.aihe;\r\n                dataService //> json-server --watch db.json --port 3001\r\n                    .changeExam(o.data.tenttiID, tenttiKopio[valittu])\r\n                    .then(response => {\r\n                        console.log(\"aihe muutettiin\", response);\r\n                        setDataNoudettu(false)\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                    .then(function () {\r\n                    });\r\n                break;\r\n            case \"POISTA_VASTAUS\":\r\n                tenttiKopio[valittu].kysymykset[o.data.kysymysIndex].vastaukset.splice(o.data.vastausIndex, 1)\r\n                dataService //> json-server --watch db.json --port 3001\r\n                .changeExam(tenttiID, tenttiKopio[valittu])\r\n                .then(response => {\r\n                    console.log(\"vastaus poistettiin\", response);\r\n                    setDataNoudettu(false)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n                .then(function () {\r\n                });\r\n            break;\r\n            case \"LISÄÄ_VASTAUS\":\r\n                tenttiKopio[valittu].kysymykset[o.data.kysymysIndex].vastaukset.push({ teksti: \"Uusi vastaus, vielä tyhjä\", vastattu: false })\r\n                dataService //> json-server --watch db.json --port 3001\r\n                .changeExam(tenttiID, tenttiKopio[valittu])\r\n                .then(response => {\r\n                    console.log(\"aihe muutettiin\", response);\r\n                    setDataNoudettu(false)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n                .then(function () {\r\n                });\r\n            break;\r\n            case \"LISÄÄ_KYSYMYS\":\r\n                tenttiKopio[valittu].kysymykset.push({ tapaus: \"Uusi kysymys, vielä tyhjä\", vastaukset: [] })\r\n                dataService //> json-server --watch db.json --port 3001\r\n                .changeExam(tenttiID, tenttiKopio[valittu])\r\n                .then(response => {\r\n                    console.log(\"aihe muutettiin\", response);\r\n                    setDataNoudettu(false)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n                .then(function () {\r\n                });\r\n                break;\r\n            case \"POISTA_KYSYMYS\":\r\n                tenttiKopio[valittu].kysymykset.splice(o.data.kysymysIndex, 1)\r\n                dataService //> json-server --watch db.json --port 3001\r\n                .changeExam(tenttiID, tenttiKopio[valittu])\r\n                .then(response => {\r\n                    console.log(\"aihe muutettiin\", response);\r\n                    setDataNoudettu(false)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n                .then(function () {\r\n                });\r\n                break;\r\n            case \"KYSYMYKSEN_TAPAUS_MUUTTUI\":\r\n                tenttiKopio[valittu].kysymykset[o.data.kysymysIndex].tapaus = o.data.tapaus\r\n                dataService //> json-server --watch db.json --port 3001 \r\n                .changeExam(tenttiID, tenttiKopio[valittu])\r\n                .then(response => {\r\n                    console.log(\"aihe muutettiin\", response);\r\n                    setDataNoudettu(false)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n                .then(function () {\r\n                });\r\n                break;\r\n            case \"VASTAUKSEN_TEKSTI_MUUTTUI\":\r\n                tenttiKopio[valittu].kysymykset[o.data.kysymysIndex].vastaukset[o.data.vastausIndex].teksti = o.data.teksti\r\n                dataService //> json-server --watch db.json --port 3001\r\n                .changeExam(tenttiID, tenttiKopio[valittu])\r\n                .then(response => {\r\n                    console.log(\"aihe muutettiin\", response);\r\n                    setDataNoudettu(false)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n                .then(function () {\r\n                });\r\n                break;\r\n            case \"VASTAUKSEN_TILA_MUUTTUI\":\r\n                tenttiKopio[valittu].kysymykset[o.data.kysymysIndex].vastaukset[o.data.vastausIndex].vastattu = !tenttiKopio[valittu].kysymykset[o.data.kysymysIndex].vastaukset[o.data.vastausIndex].vastattu\r\n                dataService //> json-server --watch db.json --port 3001\r\n                .changeExam(tenttiID, tenttiKopio[valittu])\r\n                .then(response => {\r\n                    console.log(\"aihe muutettiin\", response);\r\n                    setDataNoudettu(false)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n                .then(function () {\r\n                });\r\n                break;\r\n            default: throw new Error(\"Nyt on jokin vialla vastauksessa\")\r\n        }\r\n        // setTentti(tenttiKopio) <-- OLI ISO BUGI POISTAA NÄMÄ KOMMENTIT\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ fontWeight: \"bold\" }}>id: {tentti.id} index: {valittu}</div>\r\n            <input type=\"text\" className={classN} style={{ fontWeight: \"bold\" }} size=\"30\" \r\n            onChange={e => setTentti({...tentti, aihe: e.target.value})}\r\n            onBlur={\r\n                (event) => dispatch({ type: \"MUUTA_TENTIN_NIMI\", data: { tenttiID: tenttiID, aihe: event.target.value } })}\r\n                value={tentti.aihe} readOnly={!adminMode}\r\n            ></input>\r\n            {adminMode && <span><button onClick={() => dispatch({ type: \"POISTA_TENTTI\", data: { tenttiID: tenttiID } })}>Poista tentti</button></span>}\r\n            {tentti.kysymykset.map((item, index) => <div key={index} style={{ fontWeight: \"bold\" }}><br />\r\n            <Kysymys \r\n            tenttiValinta={tenttiValinta}\r\n            setTentti={setTentti}\r\n            tenttiID={tenttiID}\r\n            kysymys={item} \r\n            kysymysIndex={index} \r\n            dispatch={dispatch} \r\n            adminMode={adminMode} \r\n            /></div>)}\r\n            {adminMode && <span><button onClick={() => dispatch({ type: \"LISÄÄ_KYSYMYS\" })}>Lisää kysymys</button>\r\n            </span>}\r\n        </div>);\r\n}\r\nexport default Tentti;","import React, { useState } from 'react';\r\nimport '../App.css';\r\n\r\nconst Login = ({ login }) => {\r\n    const [newEmail, setNewEmail] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n    return (\r\n                <form onSubmit={e => {\r\n                    login(e, { email: newEmail, password: newPassword }) \r\n                    setNewEmail(\"\");\r\n                    setNewPassword(\"\");\r\n                }}>\r\n                    <label name=\"sposti\">Sähköposti: </label>\r\n                    <input onChange={e => setNewEmail(e.target.value)} type=\"text\" name=\"sposti\" value={newEmail} />\r\n                    <label name=\"salasana\">Salasana: </label>\r\n                    <input onChange={e => setNewPassword(e.target.value)} type=\"text\" name=\"salasana\" value={newPassword} />\r\n                    <input type=\"submit\" value=\"Kirjaudu\" />\r\n                </form>\r\n    )\r\n}\r\n\r\nexport {Login};","import React, { useState } from 'react';\r\n\r\nconst Register = ({register}) => {\r\n    const [newEmail, setNewEmail] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    return(\r\n        <form onSubmit={e =>{\r\n            register(e, newEmail, newPassword);\r\n            setNewEmail(\"\");\r\n            setNewPassword(\"\");\r\n            }}>\r\n            <label name=\"email\">Sähköposti: </label>\r\n            <input onChange={e=>setNewEmail(e.target.value)} type=\"text\" name=\"salasana\" value={newEmail} required/>\r\n            <label name=\"salasana\">Salasana: </label>\r\n            <input onChange={e=>setNewPassword(e.target.value)} minLength=\"4\" type=\"text\" name=\"salasana\" value={newPassword} required/>\r\n            <input type=\"submit\" value=\"Rekisteröidy\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport { Register};","import axios from 'axios';\r\n// const axios = require('axios').default;\r\n\r\nconst baseUrl = 'https://localhost:3001/tentit'\r\nconst baseUrlRegister = 'https://localhost:3001/register'\r\nconst baseUrlLogin = 'https://localhost:3001/login'\r\nconst baseUrlUser = 'https://localhost:3001/users'\r\n\r\n\r\nlet makeHeader = (authToken) => {\r\n    let header = { headers: { Authorization: `Bearer ${authToken}` } }\r\n    return header;\r\n}\r\n\r\nconst login = async (newUser) => {\r\n    try {\r\n        const request = await axios.post(baseUrlLogin, newUser)\r\n        return request;\r\n    }\r\n    catch (err) {\r\n        console.log(\"dataService-login: \" + err);\r\n        console.log(newUser);\r\n    }\r\n}\r\n\r\nconst addUser = async newUser => {\r\n    try {\r\n        const request = await axios.post(baseUrlRegister, newUser)\r\n        return request;\r\n    }\r\n    catch (err) {\r\n        console.log(\"dataService-addUser: \" + err);\r\n    }\r\n}\r\n\r\nconst getUser1 = async (id, token) => {\r\n    try {\r\n        const request = await axios.get(`${baseUrlUser}/${id}`, makeHeader(token))\r\n        return request.data;\r\n    }\r\n    catch (err) {\r\n        console.log(\"dataService-getUser1: \" + err);\r\n    }\r\n}\r\n\r\n\r\nconst getExams = async () => {\r\n    try {\r\n        const request = await axios.get(baseUrl);\r\n        return request.data;\r\n    }\r\n    catch (err) {\r\n        console.log(\"dataService-getExams: \" + err);\r\n    }\r\n}\r\n\r\nconst removeExam = async (id) => {\r\n    try {\r\n        const request = await axios.delete(`${baseUrl}/${id}`)\r\n        return request.data;\r\n    }\r\n    catch (err) {\r\n        console.log(\"dataService-removeExam: \" + err);\r\n    }\r\n}\r\n\r\nconst addExam = async (exam) => {\r\n    try {\r\n        const request = await axios.post(baseUrl, exam)\r\n        return request.data;\r\n    }\r\n    catch (err) {\r\n        console.log(\"dataService-addExam: \" + err);\r\n    }\r\n}\r\n\r\nconst changeExam = async (id, exam) => {\r\n    try {\r\n        const request = await axios.put(`${baseUrl}/${id}`, exam)\r\n        return request.data;\r\n    }\r\n    catch (err) {\r\n        console.log(\"dataService-changeExam: \" + err);\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default { login, addUser, getUser1, getExams, removeExam, addExam, changeExam }\r\n\r\n// export default {\r\n//     getExams: getExams,\r\n//     removeExam: removeExam,\r\n//     addExam: addExam,\r\n//     changeExam: changeExam\r\n// }\r\n","import React, { useState, useEffect } from 'react';\r\nimport Tentti from './Tentti';\r\nimport { Login } from './Login';\r\nimport { Register } from './Register';\r\nimport uudet from './uudet.json';\r\nimport dataService from './services/dataService';\r\n// const axios = require('axios').default;\r\n\r\nfunction TenttiSovellus() {\r\n  const [dataNoudettu, setDataNoudettu] = useState(false)\r\n  const [tentit, setTentit] = useState()\r\n  const [valittuIndex, setValittuIndex] = useState()\r\n  const [valittuID, setValittuID] = useState()\r\n  const [adminMode, setAdminMode] = useState(false)\r\n  const [numero, setNumero] = useState(0)\r\n  const [nayta1, setNayta1] = useState(false)\r\n  const [nayta2, setNayta2] = useState(false)\r\n  const uudetKys = uudet\r\n\r\n  const [userNow, setUserNow] = useState(null);\r\n  const [authToken, setAuthToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleError = () => {\r\n    if (errorMessage !== \"\") {\r\n      const timer = setTimeout(() => { setErrorMessage(\"\"); }, 2000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }\r\n  useEffect(handleError, [errorMessage]) //eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    if (!dataNoudettu) {\r\n      dataService //> json-server --watch db.json --port 3001\r\n        .getExams()\r\n        .then(response => {\r\n          console.log(\"promise fulfilled\", response);\r\n          if (!Object.keys(response).length) {\r\n            setErrorMessage(\"tietokanta palautti tyhjää\")\r\n            setValittuID()\r\n          } else {\r\n            setTentit(response)\r\n          }\r\n          setDataNoudettu(true)\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          console.log(error);\r\n        })\r\n        .then(function () {\r\n          // always executed\r\n        });\r\n    }\r\n  }, [dataNoudettu])\r\n\r\n  // Tuplahookki, eka (userHook) parsii AuthTokenin, toinen (initHook) hakee sen perusteella käyttäjätiedot\r\n  const userHook = () => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON);\r\n      setAuthToken(user.data.accessToken);\r\n      setUserId(user.data.user.id);\r\n    }\r\n  }\r\n  const initHook = () => {\r\n    userHook();\r\n    if (authToken === null) { // jos tokenia ei ole, ei tehdä mitään\r\n      return\r\n    }\r\n    dataService\r\n      .getUser1(userId, authToken)\r\n      .then(response => {\r\n        console.log(response)\r\n        setUserNow(response);\r\n      })\r\n  }\r\n  useEffect(initHook, [userId, authToken]);\r\n\r\n  const login = (e, userData) => {\r\n    e.preventDefault();\r\n    dataService\r\n      .login(userData)\r\n      .then(response => {\r\n        setAuthToken(response.accessToken) // jos roolit niin koko paketti\r\n        console.log(response)\r\n        window.localStorage.setItem('loggedUser', JSON.stringify(response)) //laitetaan selaimen muistiin\r\n        setNayta1(false);\r\n        setNayta2(false);\r\n        setAdminMode(true);\r\n        // window.location.href = \"/user\";\r\n      })\r\n      .catch(() => {\r\n        setErrorMessage(\"Tarkista käyttäjätunnus ja salasana\");\r\n      })\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(`loggedUser`)\r\n    setAdminMode(false)\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  const register = (e, em, passwd) => {\r\n    e.preventDefault();\r\n    const testUser = {\r\n      email: em,\r\n      password: passwd\r\n    }\r\n    dataService\r\n      .addUser(testUser)\r\n      .then(response => {\r\n        setErrorMessage(\"Rekisteröinti onnistui\");\r\n      })\r\n      .catch(() => {\r\n        setErrorMessage(\"Rekisteröinti virheellinen\");\r\n      })\r\n  }\r\n\r\n  const poistaKysymys = (id) => {\r\n    dataService //> json-server --watch db.json --port 3001\r\n      .removeExam(id)\r\n      .then(response => {\r\n        console.log(\"aihe poistettiin\", response);\r\n        setDataNoudettu(false)\r\n        setValittuID()\r\n        setValittuIndex()\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  }\r\n\r\n  const lisaaAihe = (uudetKys) => {\r\n    let exam = { aihe: \"Uusi Aihe\", kysymykset: [] }\r\n    if (uudetKys !== undefined) {\r\n      exam = uudetKys;\r\n      if (numero === (uudet.length - 1)) { setNumero(0) } else { setNumero(numero + 1) }\r\n    }\r\n    dataService //> json-server --watch db.json --port 3001\r\n      .addExam(exam)\r\n      .then(response => {\r\n        console.log(\"aihe lisättiin\", response);\r\n        setDataNoudettu(false)\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n      });\r\n  }\r\n\r\n  const tekstiOrNot = () => {\r\n    try { return tentit[valittuIndex].aihe }\r\n    catch (e) { return \"-ei valittu-\" }\r\n  }\r\n\r\n  const userOrNot = () => {\r\n    try { return userNow.email }\r\n    catch (e) { return \"-not logged-\" }\r\n  }\r\n\r\n  if (errorMessage !== \"\") return (<> <p>{errorMessage}</p></>)\r\n  return (\r\n    <div>\r\n      {(dataNoudettu === true) && <div>\r\n\r\n        {tentit.map((item, index) => <button key={index} onClick={() => { setValittuIndex(index); setValittuID(item.id); }}>{item.aihe} </button>)}\r\n        &nbsp;&nbsp;\r\n        {/* {userNow === null && <span><button onClick={() => setAdminMode(!adminMode)} value=\"Editointi\">Editointi <span style={{ fontWeight: \"bold\" }}>{adminMode ? \" ON\" : \" OFF\"}</span></button> */}\r\n        Editointi <span style={{ fontWeight: \"bold\" }}>{adminMode ? \" ON\" : \" OFF\"}</span>\r\n        &nbsp;&nbsp;\r\n        {userNow === null && <span>\r\n          <button onClick={() => { setNayta1(!nayta1); setNayta2(false) }}>Rekisteröidy</button>\r\n          <button onClick={() => { setNayta2(!nayta2); setNayta1(false) }}>Kirjaudu</button></span>}\r\n        {userNow !== null && <span>\r\n          <button onClick={() => { logout() }}>Kirjaudu ulos</button></span>}\r\n        &nbsp;&nbsp;\r\n        <span style={{ backgroundColor: 'lightyellow' }}>kirjautunut: <span style={{ fontWeight: \"bold\" }}>{userOrNot()}</span></span>\r\n        <br />\r\n        {nayta1 && <><Register register={register} /></>}\r\n        {nayta2 && <><Login login={login} /></>}\r\n\r\n        {(valittuID !== undefined) && <button onClick={() => poistaKysymys(valittuID)}>Poista {tekstiOrNot()} (DELETE)</button>}\r\n        <button onClick={() => lisaaAihe()}>Lisää Aihe (POST)</button>\r\n        <button onClick={() => lisaaAihe(uudetKys[numero])}>Lisää Tentti (POST FROM JSON)</button>\r\n        <br />\r\n        {(valittuIndex !== undefined) && <Tentti\r\n          dataService={dataService}\r\n          tenttiValinta={tentit[valittuIndex]}\r\n          setDataNoudettu={setDataNoudettu}\r\n          setValittuID={setValittuID}\r\n          setValittuIndex={setValittuIndex}\r\n          tenttiID={valittuID}\r\n          tenttiIndex={valittuIndex}\r\n          tentit={tentit}\r\n          adminMode={adminMode}\r\n        />}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TenttiSovellus;","\r\n\r\nconst Tehtava43 = () => {\r\n\r\n    function näytäHelp(help) {\r\n        document.getElementById('help').innerHTML = help;\r\n    }\r\n    function asetaHelp() {\r\n        console.log(document.getElementById(\"email\"))\r\n        console.log(document.getElementById(\"name\"))\r\n        console.log(document.getElementById(\"age\"))\r\n         var helpTeksti = [\r\n          {id: 'email', help: 'Your e-mail address'},\r\n          {id: 'name', help: 'Your full name'},\r\n          {id: 'age', help: 'Your age (you must be over 16)'}\r\n         ];\r\n         helpTeksti.forEach((item) => document.getElementById(item.id).onfocus = function() {\r\n            näytäHelp(item.help);})\r\n         }\r\n    // asetaHelp();\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"help\">Tässä näkyy aputeksti</p>\r\n            <button onClick={(() => asetaHelp())}> Alusta </button>\r\n            <p>E-mail: <input type=\"text\" id=\"email\" name=\"email\"></input></p>\r\n            <p>Name: <input type=\"text\" id=\"name\" name=\"name\"></input></p>\r\n            <p>Age: <input type=\"text\" id=\"age\" name=\"age\"></input></p>\r\n\r\n        </div>);\r\n}\r\nexport default Tehtava43;","import './App.css';\nimport React, {useState} from 'react';\n\nimport ListaSiirto from './Components/listaSiirto/ListaSiirto';\nimport Tentti from './Kehitys5/Tentti';\nimport TenttiSovellus from './Kehitys9/TenttiSovellus';\nimport Tehtava43 from './Tehtavat/Tehtava43';\n// import Koulu from './kouluMalli/Koulu3';\n// import KouluSovellus from './kouluMalli/KouluSovellus'\n\nfunction App() {\n\n  const [sovellus, setSovellus] = useState(\"TenttiSovellus\")\n  \n  const funktio = () => {\n    switch (sovellus) {\n      case \"ListaSiirto\": return <ListaSiirto/>\n      case \"Tentti\": return <Tentti/>\n      case \"TenttiSovellus\": return <TenttiSovellus/>\n      case \"Tehtava43\": return <Tehtava43/>\n      // case \"Koulu\": return <Koulu/>\n      // case \"KouluSovellus\": return <KouluSovellus />\n      default: return <h1 className=\"QuestionCardView\">Valitse haluamasi tehtävä</h1>\n    }\n  }\n  \n  return (\n    <div>\n          <select onChange={e => setSovellus(e.target.value)}>\n            <optgroup label=\"Sovellus\">\n              <option value=\"Default\">TenttiSovellus</option>\n              <option value=\"ListaSiirto\">ListaSiirto 1.4. asti</option>\n              <option value=\"Tentti\">Tentti</option>\n              <option value=\"TenttiSovellus\">TenttiSovellus</option>\n              <option value=\"Tehtava43\">Tehtava43</option>\n              {/* <option value=\"Koulu\">Koulu</option>\n              <option value=\"KouluSovellus\">KouluSovellus</option> */}\n            </optgroup>\n          </select>\n              {funktio()}   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}